#412-project.s
#Requirements: Convert C++ code to Assembly
#--------------------------------------------------------------------
# main routine and three subroutines: maxIs, minIs, and avgIs
# syscall codes used
# print integer: 1
# print string 4
# terminate: 10
#-----------------------------------------------------------------------
.data
n: .word 8
x: .word 1,2,3,4,5,6,7,8
theMax: .space 4 
theMin: .space 4
theAvg: .space 4
theRem: .space 4

msgMax: .asciiz "max = "
msgMin: .asciiz "min = "
msgAvg: .asciiz "avg = "
spc: .asciiz " "
divSym: .asciiz " / "
nl: .asciiz "\n"
bye: .asciiz "Bye! \n"
#-------------------------------
.text

.globl main
#-------------------------------

main:

# prepare for/call maxIs function
la $a0,x
lw $a1,n
jal maxIs
sw $v0,theMax

# prepare for/call minIs function
la $a0,x
lw $a1,n
jal minIs
sw $v0,theMin

# prepare for/call avgIs function
la $a0,x
lw $a1,n
la $a2,theAvg
la $a3,theRem
jal avgIs

# display results
# max
li $v0,4
la $a0,msgMax
syscall
li $v0,1
lw $a0,theMax
syscall
li $v0,4
la $a0,nl
syscall
# min
li $v0,4
la $a0,msgMin
syscall
li $v0,1
lw $a0,theMin
syscall
li $v0,4
la $a0,nl
syscall
# avg
li $v0,4
la $a0,msgAvg
syscall
li $v0,4
la $a0,spc
syscall
li $v0,1
lw $a0,theRem
syscall
li $v0,4
la $a0,divSym
syscall
li $v0,1
lw $a0,n
syscall
li $v0,4
la $a0,nl
syscall

# courtesy "Bye" message
li $v0,4
la $a0,bye
syscall
li $v0,10
syscall

.end main

.globl maxIs
#--------------------------------------------------------------
maxIs:
li $t0,0
li $v0,0
mxloop:
sll $t1,$t0,2
addu $t1,$a0,$t1
lw $t1,0($t1)
slt $t2,$v0,$t1
beq $t2,$zero,ntmx
move $v0,$t1
ntmx:
addi $t0,$t0,1
bne $t0,$a1,mxloop
jr $ra
.end maxIs

.globl minIs
#------------------------------------------------------------
minIs:
li $t0,0
lui $v0,0x7f
ori $v0,$v0,0xFF
mnloop:
sll $t1,$t0,2
addu $t1,$a0,$t1
lw $t1,0($t1)
slt $t2,$t1,$v0
beq $t2,$zero,ntmn
move $v0,$t1
ntmn:
addi $t0,$t0,1
bne $t0,$a1,mnloop
jr $ra
.end minIs

.globl avgIs

avgIs:
li $t0,0
li $t1,0
avloop:
sll $t2,$t0,2
addu $t2,$a0,$t2
lw $t2,0($t2)
add $t1,$t1,$t2
addi $t0,$t0,1
bne $t0,$a1,avloop
div $t1,$a1
mflo $t3
mfhi $t4
sw $t3,0($a2)
sw $t4,0($a3)
jr $ra
.end avgIs
